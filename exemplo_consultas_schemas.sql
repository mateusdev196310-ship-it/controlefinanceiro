-- =====================================================
-- EXEMPLOS DE CONSULTAS NOS SCHEMAS DE USU√ÅRIOS
-- =====================================================

-- 1. LISTAR TODOS OS SCHEMAS DE USU√ÅRIOS CRIADOS
SELECT schema_name 
FROM information_schema.schemata 
WHERE schema_name LIKE 'user_%'
ORDER BY schema_name;

-- 2. VER TODAS AS VIEWS DISPON√çVEIS EM UM SCHEMA
SELECT table_name as view_name
FROM information_schema.views 
WHERE table_schema = 'user_41159825009'  -- Substitua pelo CPF do usu√°rio
ORDER BY table_name;

-- =====================================================
-- EXEMPLOS PARA O USU√ÅRIO: souzac3 (CPF: 41159825009)
-- =====================================================

-- 3. VER TODAS AS TRANSA√á√ïES DO USU√ÅRIO
SELECT 
    id,
    data,
    descricao,
    valor,
    tipo,
    responsavel
FROM user_41159825009.transacoes
ORDER BY data DESC;

-- 4. VER RESUMO FINANCEIRO DO USU√ÅRIO
SELECT * FROM user_41159825009.resumo_financeiro;

-- 5. VER TRANSA√á√ïES POR CATEGORIA
SELECT * FROM user_41159825009.transacoes_por_categoria;

-- 6. VER TODAS AS CONTAS DO USU√ÅRIO
SELECT 
    id,
    nome,
    saldo,
    tipo,
    cor
FROM user_41159825009.contas;

-- 7. VER TODAS AS CATEGORIAS DO USU√ÅRIO
SELECT 
    id,
    nome,
    tipo,
    cor
FROM user_41159825009.categorias;

-- =====================================================
-- CONSULTAS AVAN√áADAS COMBINANDO VIEWS
-- =====================================================

-- 8. RELAT√ìRIO COMPLETO DE UM USU√ÅRIO
SELECT 
    'Resumo Financeiro' as secao,
    conta,
    saldo,
    total_transacoes,
    total_receitas,
    total_despesas,
    (total_receitas - total_despesas) as saldo_calculado
FROM user_41159825009.resumo_financeiro

UNION ALL

SELECT 
    'Transa√ß√µes Recentes' as secao,
    descricao as conta,
    valor as saldo,
    NULL as total_transacoes,
    NULL as total_receitas,
    NULL as total_despesas,
    NULL as saldo_calculado
FROM user_41159825009.transacoes
WHERE data >= CURRENT_DATE - INTERVAL '30 days'
ORDER BY secao, saldo DESC;

-- 9. COMPARAR RECEITAS VS DESPESAS POR M√äS
SELECT 
    EXTRACT(YEAR FROM data) as ano,
    EXTRACT(MONTH FROM data) as mes,
    SUM(CASE WHEN tipo = 'receita' THEN valor ELSE 0 END) as receitas,
    SUM(CASE WHEN tipo = 'despesa' THEN valor ELSE 0 END) as despesas,
    SUM(CASE WHEN tipo = 'receita' THEN valor ELSE -valor END) as saldo_mensal
FROM user_41159825009.transacoes
GROUP BY EXTRACT(YEAR FROM data), EXTRACT(MONTH FROM data)
ORDER BY ano DESC, mes DESC;

-- =====================================================
-- DEFINIR SCHEMA PADR√ÉO PARA FACILITAR CONSULTAS
-- =====================================================

-- 10. DEFINIR SCHEMA DO USU√ÅRIO COMO PADR√ÉO
SET search_path TO user_41159825009;

-- Agora voc√™ pode consultar sem prefixo:
SELECT * FROM transacoes;
SELECT * FROM contas;
SELECT * FROM categorias;
SELECT * FROM resumo_financeiro;

-- Para voltar ao schema p√∫blico:
SET search_path TO public;

-- =====================================================
-- EXEMPLOS PARA OUTROS USU√ÅRIOS
-- =====================================================

-- Para o usu√°rio souzac4 (CPF: 08683191559):
-- SELECT * FROM user_08683191559.transacoes;
-- SELECT * FROM user_08683191559.resumo_financeiro;

-- Para user1_8a684d0d (CPF: 12345678901):
-- SELECT * FROM user_12345678901.transacoes;
-- SELECT * FROM user_12345678901.resumo_financeiro;

-- Para user2_8a684d0d (CNPJ: 12345678000190):
-- SELECT * FROM user_12345678000190.transacoes;
-- SELECT * FROM user_12345678000190.resumo_financeiro;

-- =====================================================
-- CONSULTAS ADMINISTRATIVAS
-- =====================================================

-- 11. VER QUANTAS TRANSA√á√ïES CADA USU√ÅRIO TEM
SELECT 
    'user_41159825009' as usuario,
    COUNT(*) as total_transacoes
FROM user_41159825009.transacoes

UNION ALL

SELECT 
    'user_08683191559' as usuario,
    COUNT(*) as total_transacoes
FROM user_08683191559.transacoes

UNION ALL

SELECT 
    'user_12345678901' as usuario,
    COUNT(*) as total_transacoes
FROM user_12345678901.transacoes

UNION ALL

SELECT 
    'user_12345678000190' as usuario,
    COUNT(*) as total_transacoes
FROM user_12345678000190.transacoes

ORDER BY total_transacoes DESC;

-- 12. VERIFICAR SE OS DADOS EST√ÉO ISOLADOS CORRETAMENTE
-- (Esta consulta deve retornar apenas dados do tenant espec√≠fico)
SELECT 
    tenant_id,
    COUNT(*) as total
FROM user_41159825009.transacoes
GROUP BY tenant_id;
-- Deve retornar apenas um tenant_id

-- =====================================================
-- DICAS DE USO
-- =====================================================

/*
üí° DICAS IMPORTANTES:

1. PERFORMANCE:
   - As views s√£o calculadas em tempo real
   - Para relat√≥rios pesados, considere criar tabelas materializadas

2. SEGURAN√áA:
   - Cada schema s√≥ mostra dados do respectivo usu√°rio
   - Imposs√≠vel ver dados de outros usu√°rios

3. MANUTEN√á√ÉO:
   - As views se atualizam automaticamente quando dados mudam
   - N√£o precisa recriar quando adiciona transa√ß√µes

4. BACKUP:
   - Os schemas s√£o apenas views, n√£o ocupam espa√ßo extra
   - Backup das tabelas principais j√° inclui tudo

5. INTEGRA√á√ÉO:
   - O sistema Django continua funcionando normalmente
   - Estas views s√£o apenas para consultas diretas no banco
*/