# Generated by Django 5.2.4 on 2025-09-03 04:50

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import financas.validators
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Banco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('codigo', models.CharField(max_length=10, unique=True)),
                ('imagem', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('cor', models.CharField(default='#6c757d', max_length=20)),
                ('tipo', models.CharField(choices=[('receita', 'Receita'), ('despesa', 'Despesa'), ('ambos', 'Ambos')], default='ambos', max_length=10)),
            ],
            options={
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracaoFechamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fechamento_automatico_ativo', models.BooleanField(default=False, help_text='Ativa o fechamento automático no primeiro dia do mês')),
                ('permitir_fechamento_apenas_mes_anterior', models.BooleanField(default=True, help_text='Permite fechamento apenas do mês anterior no dia 1')),
                ('notificar_fechamento_automatico', models.BooleanField(default=True, help_text='Envia notificação quando fechamento automático é executado')),
                ('dias_graca_fechamento', models.IntegerField(default=0, help_text='Dias de graça após o dia 1 para permitir fechamento do mês anterior')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Configuração de Fechamento',
                'verbose_name_plural': 'Configurações de Fechamento',
            },
        ),
        migrations.CreateModel(
            name='Meta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('valor_alvo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('data_limite', models.DateField()),
                ('concluida', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_pessoa', models.CharField(choices=[('fisica', 'Pessoa Física'), ('juridica', 'Pessoa Jurídica')], max_length=10, verbose_name='Tipo de Pessoa')),
                ('cpf', models.CharField(blank=True, help_text='Apenas números ou formato XXX.XXX.XXX-XX', max_length=14, null=True, unique=True, validators=[financas.validators.django_validar_cpf], verbose_name='CPF')),
                ('cnpj', models.CharField(blank=True, help_text='Apenas números ou formato XX.XXX.XXX/XXXX-XX', max_length=18, null=True, unique=True, validators=[financas.validators.django_validar_cnpj], verbose_name='CNPJ')),
                ('razao_social', models.CharField(blank=True, max_length=200, verbose_name='Razão Social')),
                ('nome_fantasia', models.CharField(blank=True, max_length=200, verbose_name='Nome Fantasia')),
                ('endereco_logradouro', models.CharField(blank=True, max_length=200, verbose_name='Logradouro')),
                ('endereco_numero', models.CharField(blank=True, max_length=20, verbose_name='Número')),
                ('endereco_complemento', models.CharField(blank=True, max_length=100, verbose_name='Complemento')),
                ('endereco_bairro', models.CharField(blank=True, max_length=100, verbose_name='Bairro')),
                ('endereco_municipio', models.CharField(blank=True, max_length=100, verbose_name='Município')),
                ('endereco_uf', models.CharField(blank=True, max_length=2, verbose_name='UF')),
                ('endereco_cep', models.CharField(blank=True, max_length=10, verbose_name='CEP')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('email_verificado', models.BooleanField(default=False, verbose_name='Email Verificado')),
                ('token_verificacao', models.CharField(blank=True, max_length=100, verbose_name='Token de Verificação')),
                ('schema_name', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Nome do Schema')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'db_table': 'auth_user_custom',
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Conta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Máximo 100 caracteres', max_length=100)),
                ('saldo', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tipo', models.CharField(choices=[('simples', 'Conta Simples'), ('bancaria', 'Conta Bancária')], default='simples', max_length=50)),
                ('cnpj', models.CharField(blank=True, max_length=18, null=True)),
                ('numero_conta', models.CharField(blank=True, max_length=20, null=True)),
                ('agencia', models.CharField(blank=True, max_length=10, null=True)),
                ('banco', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='financas.banco')),
            ],
        ),
        migrations.CreateModel(
            name='DespesaParcelada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.CharField(max_length=200)),
                ('valor_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('responsavel', models.CharField(blank=True, max_length=100, null=True)),
                ('numero_parcelas', models.IntegerField()),
                ('data_primeira_parcela', models.DateField()),
                ('dia_vencimento', models.IntegerField(default=1, help_text='Dia do mês para vencimento (1-31)')),
                ('intervalo_tipo', models.CharField(choices=[('mensal', 'Mensal'), ('quinzenal', 'Quinzenal'), ('semanal', 'Semanal'), ('personalizado', 'Personalizado (dias)')], default='mensal', max_length=15)),
                ('intervalo_dias', models.IntegerField(blank=True, help_text='Número de dias para intervalo personalizado', null=True)),
                ('criada_em', models.DateTimeField(default=django.utils.timezone.now)),
                ('parcelas_geradas', models.BooleanField(default=False)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='financas.categoria')),
                ('conta', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='financas.conta')),
            ],
            options={
                'ordering': ['-criada_em'],
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome da organização ou usuário', max_length=100)),
                ('codigo', models.CharField(help_text='Código único do tenant', max_length=20, unique=True)),
                ('ativo', models.BooleanField(default=True, help_text='Se o tenant está ativo')),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('usuarios', models.ManyToManyField(blank=True, related_name='tenants', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tenant',
                'verbose_name_plural': 'Tenants',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Transacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(default=django.utils.timezone.now)),
                ('descricao', models.CharField(help_text='Máximo 200 caracteres', max_length=200)),
                ('valor', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tipo', models.CharField(choices=[('receita', 'Receita'), ('despesa', 'Despesa'), ('saida', 'Saída')], max_length=10)),
                ('responsavel', models.CharField(blank=True, max_length=100, null=True)),
                ('eh_parcelada', models.BooleanField(default=False)),
                ('numero_parcela', models.IntegerField(blank=True, null=True)),
                ('total_parcelas', models.IntegerField(blank=True, null=True)),
                ('pago', models.BooleanField(default=False, help_text='Indica se a parcela foi paga')),
                ('data_pagamento', models.DateField(blank=True, help_text='Data em que a parcela foi paga', null=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='financas.categoria')),
                ('conta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='financas.conta')),
                ('despesa_parcelada', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='financas.despesaparcelada')),
                ('transacao_pai', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parcelas', to='financas.transacao')),
            ],
            options={
                'verbose_name': 'Transação',
                'verbose_name_plural': 'Transações',
                'ordering': ['-data'],
            },
        ),
        migrations.CreateModel(
            name='FechamentoMensal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ano', models.IntegerField()),
                ('mes', models.IntegerField()),
                ('saldo_inicial', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('saldo_final', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_receitas', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_despesas', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('fechado', models.BooleanField(default=False)),
                ('eh_parcial', models.BooleanField(default=False, help_text='Indica se foi fechamento antes do fim do mês')),
                ('data_inicio_periodo', models.DateField(blank=True, help_text='Data de início do período considerado', null=True)),
                ('data_fim_periodo', models.DateField(blank=True, help_text='Data de fim do período considerado', null=True)),
                ('data_fechamento', models.DateTimeField(blank=True, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('conta', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='financas.conta')),
            ],
            options={
                'ordering': ['-ano', '-mes'],
                'unique_together': {('conta', 'ano', 'mes')},
            },
        ),
    ]
